// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package wire

import (
	"github.com/google/wire"
	"hackernews-api/internal/config"
	"hackernews-api/internal/pkg/db/migrations/mysql"
	"hackernews-api/services/auth"
	"hackernews-api/services/links"
	"hackernews-api/services/users"
)

// Injectors from wire.go:

func GetApp() (*App, error) {
	configConfig := config.GetCfg()
	dbProvider := database.InitDB(configConfig)
	userService := &users.UserService{
		DbProvider: dbProvider,
	}
	linkService := &links.LinkService{
		DbProvider: dbProvider,
	}
	usersUserService := users.UserService{
		DbProvider: dbProvider,
	}
	authService := &auth.AuthService{
		UserService: usersUserService,
	}
	app := &App{
		DbProvider:     dbProvider,
		UserService:    userService,
		LinkService:    linkService,
		NewAuthService: authService,
	}
	return app, nil
}

// wire.go:

type App struct {
	DbProvider     *database.DbProvider
	UserService    *users.UserService
	LinkService    *links.LinkService
	NewAuthService *auth.AuthService
}

var dbSet = wire.NewSet(database.InitDB, wire.Bind(new(database.IDbProvider), new(*database.DbProvider)))

var configSet = wire.NewSet(config.GetCfg, wire.Bind(new(database.IDbConfig), new(*config.Config)))

var serviceSet = wire.NewSet(users.NewUserService, links.NewLinkService, auth.NewAuthService)
